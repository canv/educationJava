//  Задания(c 36m20s):
package course;

public class Lesson1 {
    public static void main(String[] args) {

// 1) Попытатся инкрементировать Integer.MAX_VALUE++
//   * Как работает процедура репрезентации чисел?

        int test1 = Integer.MAX_VALUE;
        System.out.println(test1);
        test1++;
        System.out.println(test1);

        /*
          int test1 = Integer.MAX_VALUE++;

            Потому что Java использует метод представления чисел со
          знаком "Two's complement" (понял то, что в этом представлении
          первый бит числа определяет собой его знак (0=положит, 1=отриц))
          и когда мы добавляем 1 к максимальному значению битовый знак
          меняется с 0 на 1 и число становится отрицательным, то же
          самое работает и наоборот (с MIN на MAX)
            Похоже на циркулярные очереди
            Как я понял репрезентация чисел это то как мы хотим видеть
          числа и то, как компьютер пытается нам их показать.
          Т.к. первый уровень программирования это байт код,
          то при репрезентации (например дробных) чисел
          из двоичной системы в привычную нам десятичную
          происходят некоторые погрешности.
            Я сам был свидетелем такого, например когда вроде бы
          при ожидаемом результате 0.3 выходило 0.30000000000000004
        */


// 2) Готовый результат сравнения в операторе if
//    * Почему тип данных в boolean 1байт

        boolean result = ((10<12) & (4.2>4.4) && (0==0)) | (7*12)>(33.2-17.2);

        if(result) System.out.println("yes, it is true");
        else System.out.println("no, it's false");
        /*
            размер boolean совпадает с размером int т.к. он (boolean) создан
          на его основе для того чтобы разные JVM могли использовать его по разному
            В основном в массивах размер boolean оптимизирован до 8 бит
        */



// 3) Что будет с объявленной переменной за пределами исполнения оператора if?
//    * Примеры объявления переменных в блоке кода, и объяснение их работы

        if(result) {
            int isItWork = 22;
            for (int i = 0;;i++)
                if (i == 10) break;
        }
        /*
          System.out.println("This is don't work: " + (isItWork+3));

            Данная операция невозможна т.к. Это связано с областью существования
          переменной: которая ограничивается блоком кода {} любая переменная
          объявленная в границах блока кода может быть использована только
          в перделах этой границы и не может быть явно вызвана за её пределами
            Это относится как к исполняемому блоку кода в операторе if так и
          непосредственно в обычном теле кода где объявлен вложенный блок кода
        */
    }
}